name: Main Kittygram workflow

on:
  push:
    branches:
      - '*'

jobs:
  tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13.10
        env:
          POSTGRES_USER: django_user
          POSTGRES_PASSWORD: django_password
          POSTGRES_DB: django_db
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip 
        pip install flake8==6.0.0 flake8-isort==6.0.0
        pip install -r ./backend/requirements.txt

    - name: Test with flake8#
      run: |
        python -m flake8 backend/#        

  build_and_push_to_docker_hub:
    name: Push Docker image to DockerHub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to DockerHub
        uses: docker/build-push-action@v2
        with:
          context: ./backend/
          push: true
          tags: bogdan0957/kittygram_backend:latest
      - name: Push to Docker Hub Frontend
        uses: docker/build-push-action@v2
        with:
          push: true
          context: ./frontend/
          tags: bogdan0957/foodgram_frontend:latest

  deploy:
    runs-on: ubuntu-latest
    needs:
      - build_and_push_to_docker_hub
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Copy docker-compose.yml via ssh
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          source: "docker-compose.production.yml"
          target: "foodgram-project-react"
      - name: Executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |                     
            sudo docker pull bogdan0957/foodgram_backend           
            sudo docker pull bogdan0957/foodgram_frontend  
            sudo docker-compose stop
            sudo docker-compose rm foodgram_backend
            sudo docker-compose rm foodgram_frontend
            touch .env
            echo DB_NAME=foodgram >> .env
            echo POSTGRES_USER=postgres >> .env
            echo POSTGRES_PASSWORD=postgres >> .env
            echo DB_HOST=db >> .env
            echo DB_PORT=5432 >> .env
            echo ALLOWED_HOSTS=ALLOWED_HOSTS=['foodgramnugmanov.ddns.net', 
            '127.0.0.1', 'localhost', '158.160.64.245'] >> .env
            echo SECRET_KEY='django-insecure-)6)83fa23t^*o5-^_9my2x2#hsi*^
            gy5p7gdat%^$6d%^j9id#' >> .env
            sudo docker-compose up -d
#

  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: Send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: Деплой Foodgram успешно выполнен!